# -*- coding: utf-8 -*-
"""Laliga champions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Awdzp75QahPgJRv4GBWYqzg8m6Dq8cBn
"""

import pandas as pd
import numpy as np
import operator

def getPoints(results_arr, home_or_away):

  points = 0
  goals_for = 0
  goals_against = 0

  goals_for_index = 0
  goals_against_index = 1

  if home_or_away == 'A':
    goals_for_index = 1
    goals_against_index = 0

  for r in  results_arr:
    goals_for += r[goals_for_index]
    goals_against += r[goals_against_index]
    if r[2] == home_or_away:
      points += 3
    elif r[2] == 'D':
      points += 1
  return points, goals_for, goals_against


#Returns standings dictionary with team names as keys. Keys values are tuples (Points, Goals for, Goals against)
def seasonTable(dataset):
  standings = {}
  for i, team in enumerate(dataset.HomeTeam.unique()):
    home_games = dataset.loc[dataset['HomeTeam']==team,['FTHG','FTAG','FTR']]
    away_games = dataset.loc[dataset['AwayTeam']==team,['FTHG','FTAG','FTR']]
    standings[team] = tuple(map(operator.add, getPoints(np.array(home_games.values), 'H'), getPoints(np.array(away_games.values),'A')))
  return standings

def findChampion(season_dict):
  max_points = 0
  global champions
  for x in season_dict:
    if season_dict[x][0] > max_points:
      max_points = season_dict[x][0]
      champions = x
  return champions, season_dict[champions]

laliga = {}
for x in range(2011,2021):
  year = str(x-1)[2:] + str(x)[2:]
  url = 'https://www.football-data.co.uk/mmz4281//SP1.csv'
  url = url[0:40] + year + url[40:]
  data = pd.read_csv(url)
  laliga[x] = seasonTable(data)

import matplotlib.pyplot as plt

plt.style.use('fivethirtyeight')
plt.subplots(figsize=(14,10))

for season in laliga:
  team_name, stats = findChampion(laliga[season])
  points, goals_for, goals_against = stats
  team_name = team_name + ' ' + str(season)
  plt.scatter(goals_for, goals_against, s = 120)
  anno = team_name + ' (' + str(points) +')'
  plt.annotate(anno, (goals_for+0.5, goals_against+0.5))

plt.title("Laliga Champions 2010 - 2020, (Total Points)")
plt.xlabel("Goals For")
plt.ylabel("Goals Against")
plt.savefig('laliga_champions.png')
plt.show()

champions_dict = {}

for x in laliga:
  team, stats = findChampion(laliga[x])
  champions_dict[x] = (team, stats)

champions_dict